@startuml
hide footbox

box
participant ":PrescriptionList" as A
participant ":Prescription" as B
participant "prescriptionList\n:ArrayList<Prescription>" as C
end box

participant "ui:UI" as D

[-> A : add(ui, patientId, \nmedicine, dosage, timeInterval)
activate A

create B
A -> B : new Prescription(ui, patientId, medicine, dosage, timeInterval)
activate B
B --> A : prescription:Prescription
deactivate B

A -> C : contains(prescription)
activate C
return hasDuplicate:boolean

opt hasDuplicate == false
    A -> C : add(prescription)
    activate C
    return

    A -> B : toString()
    activate B
    return prescriptionString:String

    A -> C : indexOf(prescription)
    activate C
    return index:int

    A -> D : printMessageAndObject(prescriptionString, \nUI.ADD_PRESCRIPTION, index, UI.PRESCRIPTION)
    activate D
    return

else else
    A -> B : toString()
    activate B
    return prescriptionString:String

    A -> C : indexOf(prescription)
    activate C
    return index:int

    A -> D : printMessageAndObject(prescriptionString, \nUI.DUPLICATE_PRESCRIPTION_MESSAGE, index, UI.PRESCRIPTION)
    activate D
    return
end

return

@enduml